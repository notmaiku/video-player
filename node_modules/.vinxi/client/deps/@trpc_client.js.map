{
  "version": 3,
  "sources": ["../../../@trpc/server/dist/observable-ade1bad8.mjs", "../../../@trpc/server/dist/observable/index.mjs", "../../../@trpc/client/dist/splitLink-4c75f7be.mjs", "../../../@trpc/server/dist/codes-c924c3db.mjs", "../../../@trpc/server/dist/index-f91d720c.mjs", "../../../@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs", "../../../@trpc/client/dist/transformResult-ace864b8.mjs", "../../../@trpc/client/dist/TRPCClientError-38f9a32a.mjs", "../../../@trpc/client/dist/httpUtils-b9d0cb48.mjs", "../../../@trpc/client/dist/httpBatchLink-d0f9eac9.mjs", "../../../@trpc/client/dist/links/httpLink.mjs", "../../../@trpc/client/dist/links/loggerLink.mjs", "../../../@trpc/client/dist/links/wsLink.mjs", "../../../@trpc/client/dist/index.mjs"],
  "sourcesContent": ["function identity(x) {\r\n    return x;\r\n}\r\n\r\n/** @internal */ function pipeFromArray(fns) {\r\n    if (fns.length === 0) {\r\n        return identity;\r\n    }\r\n    if (fns.length === 1) {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return fns[0];\r\n    }\r\n    return function piped(input) {\r\n        return fns.reduce((prev, fn)=>fn(prev), input);\r\n    };\r\n}\r\n\r\nfunction isObservable(x) {\r\n    return typeof x === 'object' && x !== null && 'subscribe' in x;\r\n}\r\nfunction observable(subscribe) {\r\n    const self = {\r\n        subscribe (observer) {\r\n            let teardownRef = null;\r\n            let isDone = false;\r\n            let unsubscribed = false;\r\n            let teardownImmediately = false;\r\n            function unsubscribe() {\r\n                if (teardownRef === null) {\r\n                    teardownImmediately = true;\r\n                    return;\r\n                }\r\n                if (unsubscribed) {\r\n                    return;\r\n                }\r\n                unsubscribed = true;\r\n                if (typeof teardownRef === 'function') {\r\n                    teardownRef();\r\n                } else if (teardownRef) {\r\n                    teardownRef.unsubscribe();\r\n                }\r\n            }\r\n            teardownRef = subscribe({\r\n                next (value) {\r\n                    if (isDone) {\r\n                        return;\r\n                    }\r\n                    observer.next?.(value);\r\n                },\r\n                error (err) {\r\n                    if (isDone) {\r\n                        return;\r\n                    }\r\n                    isDone = true;\r\n                    observer.error?.(err);\r\n                    unsubscribe();\r\n                },\r\n                complete () {\r\n                    if (isDone) {\r\n                        return;\r\n                    }\r\n                    isDone = true;\r\n                    observer.complete?.();\r\n                    unsubscribe();\r\n                }\r\n            });\r\n            if (teardownImmediately) {\r\n                unsubscribe();\r\n            }\r\n            return {\r\n                unsubscribe\r\n            };\r\n        },\r\n        pipe (...operations) {\r\n            return pipeFromArray(operations)(self);\r\n        }\r\n    };\r\n    return self;\r\n}\r\n\r\nexport { isObservable as i, observable as o };\r\n", "export { i as isObservable, o as observable } from '../observable-ade1bad8.mjs';\r\n\r\nfunction share(_opts) {\r\n    return (originalObserver)=>{\r\n        let refCount = 0;\r\n        let subscription = null;\r\n        const observers = [];\r\n        function startIfNeeded() {\r\n            if (subscription) {\r\n                return;\r\n            }\r\n            subscription = originalObserver.subscribe({\r\n                next (value) {\r\n                    for (const observer of observers){\r\n                        observer.next?.(value);\r\n                    }\r\n                },\r\n                error (error) {\r\n                    for (const observer of observers){\r\n                        observer.error?.(error);\r\n                    }\r\n                },\r\n                complete () {\r\n                    for (const observer of observers){\r\n                        observer.complete?.();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        function resetIfNeeded() {\r\n            // \"resetOnRefCountZero\"\r\n            if (refCount === 0 && subscription) {\r\n                const _sub = subscription;\r\n                subscription = null;\r\n                _sub.unsubscribe();\r\n            }\r\n        }\r\n        return {\r\n            subscribe (observer) {\r\n                refCount++;\r\n                observers.push(observer);\r\n                startIfNeeded();\r\n                return {\r\n                    unsubscribe () {\r\n                        refCount--;\r\n                        resetIfNeeded();\r\n                        const index = observers.findIndex((v)=>v === observer);\r\n                        if (index > -1) {\r\n                            observers.splice(index, 1);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nfunction map(project) {\r\n    return (originalObserver)=>{\r\n        return {\r\n            subscribe (observer) {\r\n                let index = 0;\r\n                const subscription = originalObserver.subscribe({\r\n                    next (value) {\r\n                        observer.next?.(project(value, index++));\r\n                    },\r\n                    error (error) {\r\n                        observer.error?.(error);\r\n                    },\r\n                    complete () {\r\n                        observer.complete?.();\r\n                    }\r\n                });\r\n                return subscription;\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nfunction tap(observer) {\r\n    return (originalObserver)=>{\r\n        return {\r\n            subscribe (observer2) {\r\n                return originalObserver.subscribe({\r\n                    next (v) {\r\n                        observer.next?.(v);\r\n                        observer2.next?.(v);\r\n                    },\r\n                    error (v) {\r\n                        observer.error?.(v);\r\n                        observer2.error?.(v);\r\n                    },\r\n                    complete () {\r\n                        observer.complete?.();\r\n                        observer2.complete?.();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nclass ObservableAbortError extends Error {\r\n    constructor(message){\r\n        super(message);\r\n        this.name = 'ObservableAbortError';\r\n        Object.setPrototypeOf(this, ObservableAbortError.prototype);\r\n    }\r\n}\r\n/** @internal */ function observableToPromise(observable) {\r\n    let abort;\r\n    const promise = new Promise((resolve, reject)=>{\r\n        let isDone = false;\r\n        function onDone() {\r\n            if (isDone) {\r\n                return;\r\n            }\r\n            isDone = true;\r\n            reject(new ObservableAbortError('This operation was aborted.'));\r\n            obs$.unsubscribe();\r\n        }\r\n        const obs$ = observable.subscribe({\r\n            next (data) {\r\n                isDone = true;\r\n                resolve(data);\r\n                onDone();\r\n            },\r\n            error (data) {\r\n                isDone = true;\r\n                reject(data);\r\n                onDone();\r\n            },\r\n            complete () {\r\n                isDone = true;\r\n                onDone();\r\n            }\r\n        });\r\n        abort = onDone;\r\n    });\r\n    return {\r\n        promise,\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        abort: abort\r\n    };\r\n}\r\n\r\nexport { map, observableToPromise, share, tap };\r\n", "import { observable } from '@trpc/server/observable';\r\n\r\n/** @internal */ function createChain(opts) {\r\n    return observable((observer)=>{\r\n        function execute(index = 0, op = opts.op) {\r\n            const next = opts.links[index];\r\n            if (!next) {\r\n                throw new Error('No more links to execute - did you forget to add an ending link?');\r\n            }\r\n            const subscription = next({\r\n                op,\r\n                next (nextOp) {\r\n                    const nextObserver = execute(index + 1, nextOp);\r\n                    return nextObserver;\r\n                }\r\n            });\r\n            return subscription;\r\n        }\r\n        const obs$ = execute();\r\n        return obs$.subscribe(observer);\r\n    });\r\n}\r\n\r\nfunction asArray(value) {\r\n    return Array.isArray(value) ? value : [\r\n        value\r\n    ];\r\n}\r\nfunction splitLink(opts) {\r\n    return (runtime)=>{\r\n        const yes = asArray(opts.true).map((link)=>link(runtime));\r\n        const no = asArray(opts.false).map((link)=>link(runtime));\r\n        return (props)=>{\r\n            return observable((observer)=>{\r\n                const links = opts.condition(props.op) ? yes : no;\r\n                return createChain({\r\n                    op: props.op,\r\n                    links\r\n                }).subscribe(observer);\r\n            });\r\n        };\r\n    };\r\n}\r\n\r\nexport { createChain as c, splitLink as s };\r\n", "/**\r\n * @internal\r\n */ function invert(obj) {\r\n    const newObj = Object.create(null);\r\n    for(const key in obj){\r\n        const v = obj[key];\r\n        newObj[v] = key;\r\n    }\r\n    return newObj;\r\n}\r\n\r\n// reference: https://www.jsonrpc.org/specification\r\n/**\r\n * JSON-RPC 2.0 Error codes\r\n *\r\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\r\n * For tRPC we're copying the last digits of HTTP 4XX errors.\r\n */ const TRPC_ERROR_CODES_BY_KEY = {\r\n    /**\r\n   * Invalid JSON was received by the server.\r\n   * An error occurred on the server while parsing the JSON text.\r\n   */ PARSE_ERROR: -32700,\r\n    /**\r\n   * The JSON sent is not a valid Request object.\r\n   */ BAD_REQUEST: -32600,\r\n    // Internal JSON-RPC error\r\n    INTERNAL_SERVER_ERROR: -32603,\r\n    NOT_IMPLEMENTED: -32603,\r\n    // Implementation specific errors\r\n    UNAUTHORIZED: -32001,\r\n    FORBIDDEN: -32003,\r\n    NOT_FOUND: -32004,\r\n    METHOD_NOT_SUPPORTED: -32005,\r\n    TIMEOUT: -32008,\r\n    CONFLICT: -32009,\r\n    PRECONDITION_FAILED: -32012,\r\n    PAYLOAD_TOO_LARGE: -32013,\r\n    UNPROCESSABLE_CONTENT: -32022,\r\n    TOO_MANY_REQUESTS: -32029,\r\n    CLIENT_CLOSED_REQUEST: -32099\r\n};\r\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\r\n\r\nexport { TRPC_ERROR_CODES_BY_KEY as T, TRPC_ERROR_CODES_BY_NUMBER as a, invert as i };\r\n", "import { i as invert, T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\r\n\r\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\r\nconst JSONRPC2_TO_HTTP_CODE = {\r\n    PARSE_ERROR: 400,\r\n    BAD_REQUEST: 400,\r\n    UNAUTHORIZED: 401,\r\n    NOT_FOUND: 404,\r\n    FORBIDDEN: 403,\r\n    METHOD_NOT_SUPPORTED: 405,\r\n    TIMEOUT: 408,\r\n    CONFLICT: 409,\r\n    PRECONDITION_FAILED: 412,\r\n    PAYLOAD_TOO_LARGE: 413,\r\n    UNPROCESSABLE_CONTENT: 422,\r\n    TOO_MANY_REQUESTS: 429,\r\n    CLIENT_CLOSED_REQUEST: 499,\r\n    INTERNAL_SERVER_ERROR: 500,\r\n    NOT_IMPLEMENTED: 501\r\n};\r\nfunction getStatusCodeFromKey(code) {\r\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\r\n}\r\nfunction getHTTPStatusCode(json) {\r\n    const arr = Array.isArray(json) ? json : [\r\n        json\r\n    ];\r\n    const httpStatuses = new Set(arr.map((res)=>{\r\n        if ('error' in res) {\r\n            const data = res.error.data;\r\n            if (typeof data.httpStatus === 'number') {\r\n                return data.httpStatus;\r\n            }\r\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\r\n            return getStatusCodeFromKey(code);\r\n        }\r\n        return 200;\r\n    }));\r\n    if (httpStatuses.size !== 1) {\r\n        return 207;\r\n    }\r\n    const httpStatus = httpStatuses.values().next().value;\r\n    return httpStatus;\r\n}\r\nfunction getHTTPStatusCodeFromError(error) {\r\n    return getStatusCodeFromKey(error.code);\r\n}\r\n\r\nconst noop = ()=>{\r\n// noop\r\n};\r\nfunction createInnerProxy(callback, path) {\r\n    const proxy = new Proxy(noop, {\r\n        get (_obj, key) {\r\n            if (typeof key !== 'string' || key === 'then') {\r\n                // special case for if the proxy is accidentally treated\r\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\r\n                return undefined;\r\n            }\r\n            return createInnerProxy(callback, [\r\n                ...path,\r\n                key\r\n            ]);\r\n        },\r\n        apply (_1, _2, args) {\r\n            const isApply = path[path.length - 1] === 'apply';\r\n            return callback({\r\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\r\n                path: isApply ? path.slice(0, -1) : path\r\n            });\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\n/**\r\n * Creates a proxy that calls the callback with the path and arguments\r\n *\r\n * @internal\r\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\r\n/**\r\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\r\n *\r\n * @internal\r\n */ const createFlatProxy = (callback)=>{\r\n    return new Proxy(noop, {\r\n        get (_obj, name) {\r\n            if (typeof name !== 'string' || name === 'then') {\r\n                // special case for if the proxy is accidentally treated\r\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\r\n                return undefined;\r\n            }\r\n            return callback(name);\r\n        }\r\n    });\r\n};\r\n\r\nexport { TRPC_ERROR_CODES_BY_NUMBER as T, createRecursiveProxy as a, getHTTPStatusCode as b, createFlatProxy as c, getHTTPStatusCodeFromError as g };\r\n", "/**\r\n * @internal\r\n */ function isObject(value) {\r\n    // check that value is object\r\n    return !!value && !Array.isArray(value) && typeof value === 'object';\r\n}\r\n\r\nclass UnknownCauseError extends Error {\r\n}\r\nfunction getCauseFromUnknown(cause) {\r\n    if (cause instanceof Error) {\r\n        return cause;\r\n    }\r\n    const type = typeof cause;\r\n    if (type === 'undefined' || type === 'function' || cause === null) {\r\n        return undefined;\r\n    }\r\n    // Primitive types just get wrapped in an error\r\n    if (type !== 'object') {\r\n        return new Error(String(cause));\r\n    }\r\n    // If it's an object, we'll create a synthetic error\r\n    if (isObject(cause)) {\r\n        const err = new UnknownCauseError();\r\n        for(const key in cause){\r\n            err[key] = cause[key];\r\n        }\r\n        return err;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport { getCauseFromUnknown as g };\r\n", "function isObject(value) {\r\n    // check that value is object\r\n    return !!value && !Array.isArray(value) && typeof value === 'object';\r\n}\r\n\r\n// FIXME:\r\n// - the generics here are probably unnecessary\r\n// - the RPC-spec could probably be simplified to combine HTTP + WS\r\n/** @internal */ function transformResultInner(response, runtime) {\r\n    if ('error' in response) {\r\n        const error = runtime.transformer.deserialize(response.error);\r\n        return {\r\n            ok: false,\r\n            error: {\r\n                ...response,\r\n                error\r\n            }\r\n        };\r\n    }\r\n    const result = {\r\n        ...response.result,\r\n        ...(!response.result.type || response.result.type === 'data') && {\r\n            type: 'data',\r\n            data: runtime.transformer.deserialize(response.result.data)\r\n        }\r\n    };\r\n    return {\r\n        ok: true,\r\n        result\r\n    };\r\n}\r\nclass TransformResultError extends Error {\r\n    constructor(){\r\n        super('Unable to transform response from server');\r\n    }\r\n}\r\n/**\r\n * Transforms and validates that the result is a valid TRPCResponse\r\n * @internal\r\n */ function transformResult(response, runtime) {\r\n    let result;\r\n    try {\r\n        // Use the data transformers on the JSON-response\r\n        result = transformResultInner(response, runtime);\r\n    } catch (err) {\r\n        throw new TransformResultError();\r\n    }\r\n    // check that output of the transformers is a valid TRPCResponse\r\n    if (!result.ok && (!isObject(result.error.error) || typeof result.error.error.code !== 'number')) {\r\n        throw new TransformResultError();\r\n    }\r\n    if (result.ok && !isObject(result.result)) {\r\n        throw new TransformResultError();\r\n    }\r\n    return result;\r\n}\r\n\r\nexport { isObject as i, transformResult as t };\r\n", "import { getCauseFromUnknown } from '@trpc/server/shared';\r\nimport { i as isObject } from './transformResult-ace864b8.mjs';\r\n\r\nfunction isTRPCClientError(cause) {\r\n    return cause instanceof TRPCClientError || /**\r\n     * @deprecated\r\n     * Delete in next major\r\n     */ cause instanceof Error && cause.name === 'TRPCClientError';\r\n}\r\nfunction isTRPCErrorResponse(obj) {\r\n    return isObject(obj) && isObject(obj.error) && typeof obj.error.code === 'number' && typeof obj.error.message === 'string';\r\n}\r\nclass TRPCClientError extends Error {\r\n    static from(_cause, opts = {}) {\r\n        const cause = _cause;\r\n        if (isTRPCClientError(cause)) {\r\n            if (opts.meta) {\r\n                // Decorate with meta error data\r\n                cause.meta = {\r\n                    ...cause.meta,\r\n                    ...opts.meta\r\n                };\r\n            }\r\n            return cause;\r\n        }\r\n        if (isTRPCErrorResponse(cause)) {\r\n            return new TRPCClientError(cause.error.message, {\r\n                ...opts,\r\n                result: cause\r\n            });\r\n        }\r\n        if (!(cause instanceof Error)) {\r\n            return new TRPCClientError('Unknown error', {\r\n                ...opts,\r\n                cause: cause\r\n            });\r\n        }\r\n        return new TRPCClientError(cause.message, {\r\n            ...opts,\r\n            cause: getCauseFromUnknown(cause)\r\n        });\r\n    }\r\n    constructor(message, opts){\r\n        const cause = opts?.cause;\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\r\n        super(message, {\r\n            cause\r\n        });\r\n        this.meta = opts?.meta;\r\n        this.cause = cause;\r\n        this.shape = opts?.result?.error;\r\n        this.data = opts?.result?.error.data;\r\n        this.name = 'TRPCClientError';\r\n        Object.setPrototypeOf(this, TRPCClientError.prototype);\r\n    }\r\n}\r\n\r\nexport { TRPCClientError as T };\r\n", "import { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\r\n\r\nconst isFunction = (fn)=>typeof fn === 'function';\r\nfunction getFetch(customFetchImpl) {\r\n    if (customFetchImpl) {\r\n        return customFetchImpl;\r\n    }\r\n    if (typeof window !== 'undefined' && isFunction(window.fetch)) {\r\n        return window.fetch;\r\n    }\r\n    if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\r\n        return globalThis.fetch;\r\n    }\r\n    throw new Error('No fetch implementation found');\r\n}\r\n\r\nfunction getAbortController(customAbortControllerImpl) {\r\n    if (customAbortControllerImpl) {\r\n        return customAbortControllerImpl;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n    if (typeof window !== 'undefined' && window.AbortController) {\r\n        return window.AbortController;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n    if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\r\n        return globalThis.AbortController;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction resolveHTTPLinkOptions(opts) {\r\n    return {\r\n        url: opts.url.toString().replace(/\\/$/, ''),\r\n        fetch: opts.fetch,\r\n        AbortController: getAbortController(opts.AbortController)\r\n    };\r\n}\r\n// https://github.com/trpc/trpc/pull/669\r\nfunction arrayToDict(array) {\r\n    const dict = {};\r\n    for(let index = 0; index < array.length; index++){\r\n        const element = array[index];\r\n        dict[index] = element;\r\n    }\r\n    return dict;\r\n}\r\nconst METHOD = {\r\n    query: 'GET',\r\n    mutation: 'POST'\r\n};\r\nfunction getInput(opts) {\r\n    return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map((_input)=>opts.runtime.transformer.serialize(_input)));\r\n}\r\nconst getUrl = (opts)=>{\r\n    let url = opts.url + '/' + opts.path;\r\n    const queryParts = [];\r\n    if ('inputs' in opts) {\r\n        queryParts.push('batch=1');\r\n    }\r\n    if (opts.type === 'query') {\r\n        const input = getInput(opts);\r\n        if (input !== undefined) {\r\n            queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\r\n        }\r\n    }\r\n    if (queryParts.length) {\r\n        url += '?' + queryParts.join('&');\r\n    }\r\n    return url;\r\n};\r\nconst getBody = (opts)=>{\r\n    if (opts.type === 'query') {\r\n        return undefined;\r\n    }\r\n    const input = getInput(opts);\r\n    return input !== undefined ? JSON.stringify(input) : undefined;\r\n};\r\nconst jsonHttpRequester = (opts)=>{\r\n    return httpRequest({\r\n        ...opts,\r\n        contentTypeHeader: 'application/json',\r\n        getUrl,\r\n        getBody\r\n    });\r\n};\r\nasync function fetchHTTPResponse(opts, ac) {\r\n    const url = opts.getUrl(opts);\r\n    const body = opts.getBody(opts);\r\n    const { type  } = opts;\r\n    const resolvedHeaders = await opts.headers();\r\n    /* istanbul ignore if -- @preserve */ if (type === 'subscription') {\r\n        throw new Error('Subscriptions should use wsLink');\r\n    }\r\n    const headers = {\r\n        ...opts.contentTypeHeader ? {\r\n            'content-type': opts.contentTypeHeader\r\n        } : {},\r\n        ...opts.batchModeHeader ? {\r\n            'trpc-batch-mode': opts.batchModeHeader\r\n        } : {},\r\n        ...resolvedHeaders\r\n    };\r\n    return getFetch(opts.fetch)(url, {\r\n        method: METHOD[type],\r\n        signal: ac?.signal,\r\n        body: body,\r\n        headers\r\n    });\r\n}\r\nfunction httpRequest(opts) {\r\n    const ac = opts.AbortController ? new opts.AbortController() : null;\r\n    const meta = {};\r\n    let done = false;\r\n    const promise = new Promise((resolve, reject)=>{\r\n        fetchHTTPResponse(opts, ac).then((_res)=>{\r\n            meta.response = _res;\r\n            done = true;\r\n            return _res.json();\r\n        }).then((json)=>{\r\n            meta.responseJSON = json;\r\n            resolve({\r\n                json: json,\r\n                meta\r\n            });\r\n        }).catch((err)=>{\r\n            done = true;\r\n            reject(TRPCClientError.from(err, {\r\n                meta\r\n            }));\r\n        });\r\n    });\r\n    const cancel = ()=>{\r\n        if (!done) {\r\n            ac?.abort();\r\n        }\r\n    };\r\n    return {\r\n        promise,\r\n        cancel\r\n    };\r\n}\r\n\r\nexport { getBody as a, getFetch as b, fetchHTTPResponse as f, getUrl as g, httpRequest as h, jsonHttpRequester as j, resolveHTTPLinkOptions as r };\r\n", "import { observable } from '@trpc/server/observable';\r\nimport { t as transformResult } from './transformResult-ace864b8.mjs';\r\nimport { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\r\nimport { r as resolveHTTPLinkOptions, g as getUrl, j as jsonHttpRequester } from './httpUtils-b9d0cb48.mjs';\r\n\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */ /**\r\n * A function that should never be called unless we messed something up.\r\n */ const throwFatalError = ()=>{\r\n    throw new Error('Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new');\r\n};\r\n/**\r\n * Dataloader that's very inspired by https://github.com/graphql/dataloader\r\n * Less configuration, no caching, and allows you to cancel requests\r\n * When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\r\n */ function dataLoader(batchLoader) {\r\n    let pendingItems = null;\r\n    let dispatchTimer = null;\r\n    const destroyTimerAndPendingItems = ()=>{\r\n        clearTimeout(dispatchTimer);\r\n        dispatchTimer = null;\r\n        pendingItems = null;\r\n    };\r\n    /**\r\n   * Iterate through the items and split them into groups based on the `batchLoader`'s validate function\r\n   */ function groupItems(items) {\r\n        const groupedItems = [\r\n            []\r\n        ];\r\n        let index = 0;\r\n        while(true){\r\n            const item = items[index];\r\n            if (!item) {\r\n                break;\r\n            }\r\n            const lastGroup = groupedItems[groupedItems.length - 1];\r\n            if (item.aborted) {\r\n                // Item was aborted before it was dispatched\r\n                item.reject?.(new Error('Aborted'));\r\n                index++;\r\n                continue;\r\n            }\r\n            const isValid = batchLoader.validate(lastGroup.concat(item).map((it)=>it.key));\r\n            if (isValid) {\r\n                lastGroup.push(item);\r\n                index++;\r\n                continue;\r\n            }\r\n            if (lastGroup.length === 0) {\r\n                item.reject?.(new Error('Input is too big for a single dispatch'));\r\n                index++;\r\n                continue;\r\n            }\r\n            // Create new group, next iteration will try to add the item to that\r\n            groupedItems.push([]);\r\n        }\r\n        return groupedItems;\r\n    }\r\n    function dispatch() {\r\n        const groupedItems = groupItems(pendingItems);\r\n        destroyTimerAndPendingItems();\r\n        // Create batches for each group of items\r\n        for (const items of groupedItems){\r\n            if (!items.length) {\r\n                continue;\r\n            }\r\n            const batch = {\r\n                items,\r\n                cancel: throwFatalError\r\n            };\r\n            for (const item of items){\r\n                item.batch = batch;\r\n            }\r\n            const unitResolver = (index, value)=>{\r\n                const item = batch.items[index];\r\n                item.resolve?.(value);\r\n                item.batch = null;\r\n                item.reject = null;\r\n                item.resolve = null;\r\n            };\r\n            const { promise , cancel  } = batchLoader.fetch(batch.items.map((_item)=>_item.key), unitResolver);\r\n            batch.cancel = cancel;\r\n            promise.then((result)=>{\r\n                for(let i = 0; i < result.length; i++){\r\n                    const value = result[i];\r\n                    unitResolver(i, value);\r\n                }\r\n                for (const item of batch.items){\r\n                    item.reject?.(new Error('Missing result'));\r\n                    item.batch = null;\r\n                }\r\n            }).catch((cause)=>{\r\n                for (const item of batch.items){\r\n                    item.reject?.(cause);\r\n                    item.batch = null;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function load(key) {\r\n        const item = {\r\n            aborted: false,\r\n            key,\r\n            batch: null,\r\n            resolve: throwFatalError,\r\n            reject: throwFatalError\r\n        };\r\n        const promise = new Promise((resolve, reject)=>{\r\n            item.reject = reject;\r\n            item.resolve = resolve;\r\n            if (!pendingItems) {\r\n                pendingItems = [];\r\n            }\r\n            pendingItems.push(item);\r\n        });\r\n        if (!dispatchTimer) {\r\n            dispatchTimer = setTimeout(dispatch);\r\n        }\r\n        const cancel = ()=>{\r\n            item.aborted = true;\r\n            if (item.batch?.items.every((item)=>item.aborted)) {\r\n                // All items in the batch have been cancelled\r\n                item.batch.cancel();\r\n                item.batch = null;\r\n            }\r\n        };\r\n        return {\r\n            promise,\r\n            cancel\r\n        };\r\n    }\r\n    return {\r\n        load\r\n    };\r\n}\r\n\r\n/**\r\n * @internal\r\n */ function createHTTPBatchLink(requester) {\r\n    return function httpBatchLink(opts) {\r\n        const resolvedOpts = resolveHTTPLinkOptions(opts);\r\n        const maxURLLength = opts.maxURLLength ?? Infinity;\r\n        // initialized config\r\n        return (runtime)=>{\r\n            const batchLoader = (type)=>{\r\n                const validate = (batchOps)=>{\r\n                    if (maxURLLength === Infinity) {\r\n                        // escape hatch for quick calcs\r\n                        return true;\r\n                    }\r\n                    const path = batchOps.map((op)=>op.path).join(',');\r\n                    const inputs = batchOps.map((op)=>op.input);\r\n                    const url = getUrl({\r\n                        ...resolvedOpts,\r\n                        runtime,\r\n                        type,\r\n                        path,\r\n                        inputs\r\n                    });\r\n                    return url.length <= maxURLLength;\r\n                };\r\n                const fetch = requester({\r\n                    ...resolvedOpts,\r\n                    runtime,\r\n                    type,\r\n                    opts\r\n                });\r\n                return {\r\n                    validate,\r\n                    fetch\r\n                };\r\n            };\r\n            const query = dataLoader(batchLoader('query'));\r\n            const mutation = dataLoader(batchLoader('mutation'));\r\n            const subscription = dataLoader(batchLoader('subscription'));\r\n            const loaders = {\r\n                query,\r\n                subscription,\r\n                mutation\r\n            };\r\n            return ({ op  })=>{\r\n                return observable((observer)=>{\r\n                    const loader = loaders[op.type];\r\n                    const { promise , cancel  } = loader.load(op);\r\n                    let _res = undefined;\r\n                    promise.then((res)=>{\r\n                        _res = res;\r\n                        const transformed = transformResult(res.json, runtime);\r\n                        if (!transformed.ok) {\r\n                            observer.error(TRPCClientError.from(transformed.error, {\r\n                                meta: res.meta\r\n                            }));\r\n                            return;\r\n                        }\r\n                        observer.next({\r\n                            context: res.meta,\r\n                            result: transformed.result\r\n                        });\r\n                        observer.complete();\r\n                    }).catch((err)=>{\r\n                        observer.error(TRPCClientError.from(err, {\r\n                            meta: _res?.meta\r\n                        }));\r\n                    });\r\n                    return ()=>{\r\n                        cancel();\r\n                    };\r\n                });\r\n            };\r\n        };\r\n    };\r\n}\r\n\r\nconst batchRequester = (requesterOpts)=>{\r\n    return (batchOps)=>{\r\n        const path = batchOps.map((op)=>op.path).join(',');\r\n        const inputs = batchOps.map((op)=>op.input);\r\n        const { promise , cancel  } = jsonHttpRequester({\r\n            ...requesterOpts,\r\n            path,\r\n            inputs,\r\n            headers () {\r\n                if (!requesterOpts.opts.headers) {\r\n                    return {};\r\n                }\r\n                if (typeof requesterOpts.opts.headers === 'function') {\r\n                    return requesterOpts.opts.headers({\r\n                        opList: batchOps\r\n                    });\r\n                }\r\n                return requesterOpts.opts.headers;\r\n            }\r\n        });\r\n        return {\r\n            promise: promise.then((res)=>{\r\n                const resJSON = Array.isArray(res.json) ? res.json : batchOps.map(()=>res.json);\r\n                const result = resJSON.map((item)=>({\r\n                        meta: res.meta,\r\n                        json: item\r\n                    }));\r\n                return result;\r\n            }),\r\n            cancel\r\n        };\r\n    };\r\n};\r\nconst httpBatchLink = createHTTPBatchLink(batchRequester);\r\n\r\nexport { createHTTPBatchLink as c, httpBatchLink as h };\r\n", "import { observable } from '@trpc/server/observable';\r\nimport { t as transformResult } from '../transformResult-ace864b8.mjs';\r\nimport { T as TRPCClientError } from '../TRPCClientError-38f9a32a.mjs';\r\nimport { r as resolveHTTPLinkOptions, j as jsonHttpRequester } from '../httpUtils-b9d0cb48.mjs';\r\nimport '@trpc/server/shared';\r\n\r\nfunction httpLinkFactory(factoryOpts) {\r\n    return (opts)=>{\r\n        const resolvedOpts = resolveHTTPLinkOptions(opts);\r\n        return (runtime)=>({ op  })=>observable((observer)=>{\r\n                    const { path , input , type  } = op;\r\n                    const { promise , cancel  } = factoryOpts.requester({\r\n                        ...resolvedOpts,\r\n                        runtime,\r\n                        type,\r\n                        path,\r\n                        input,\r\n                        headers () {\r\n                            if (!opts.headers) {\r\n                                return {};\r\n                            }\r\n                            if (typeof opts.headers === 'function') {\r\n                                return opts.headers({\r\n                                    op\r\n                                });\r\n                            }\r\n                            return opts.headers;\r\n                        }\r\n                    });\r\n                    let meta = undefined;\r\n                    promise.then((res)=>{\r\n                        meta = res.meta;\r\n                        const transformed = transformResult(res.json, runtime);\r\n                        if (!transformed.ok) {\r\n                            observer.error(TRPCClientError.from(transformed.error, {\r\n                                meta\r\n                            }));\r\n                            return;\r\n                        }\r\n                        observer.next({\r\n                            context: res.meta,\r\n                            result: transformed.result\r\n                        });\r\n                        observer.complete();\r\n                    }).catch((cause)=>{\r\n                        observer.error(TRPCClientError.from(cause, {\r\n                            meta\r\n                        }));\r\n                    });\r\n                    return ()=>{\r\n                        cancel();\r\n                    };\r\n                });\r\n    };\r\n}\r\n/**\r\n * @see https://trpc.io/docs/client/links/httpLink\r\n */ const httpLink = httpLinkFactory({\r\n    requester: jsonHttpRequester\r\n});\r\n\r\nexport { httpLink, httpLinkFactory };\r\n", "import { observable, tap } from '@trpc/server/observable';\r\n\r\n/// <reference lib=\"dom.iterable\" />\r\nfunction isFormData(value) {\r\n    if (typeof FormData === 'undefined') {\r\n        // FormData is not supported\r\n        return false;\r\n    }\r\n    return value instanceof FormData;\r\n}\r\nconst palettes = {\r\n    css: {\r\n        query: [\r\n            '72e3ff',\r\n            '3fb0d8'\r\n        ],\r\n        mutation: [\r\n            'c5a3fc',\r\n            '904dfc'\r\n        ],\r\n        subscription: [\r\n            'ff49e1',\r\n            'd83fbe'\r\n        ]\r\n    },\r\n    ansi: {\r\n        regular: {\r\n            // Cyan background, black and white text respectively\r\n            query: [\r\n                '\\x1b[30;46m',\r\n                '\\x1b[97;46m'\r\n            ],\r\n            // Magenta background, black and white text respectively\r\n            mutation: [\r\n                '\\x1b[30;45m',\r\n                '\\x1b[97;45m'\r\n            ],\r\n            // Green background, black and white text respectively\r\n            subscription: [\r\n                '\\x1b[30;42m',\r\n                '\\x1b[97;42m'\r\n            ]\r\n        },\r\n        bold: {\r\n            query: [\r\n                '\\x1b[1;30;46m',\r\n                '\\x1b[1;97;46m'\r\n            ],\r\n            mutation: [\r\n                '\\x1b[1;30;45m',\r\n                '\\x1b[1;97;45m'\r\n            ],\r\n            subscription: [\r\n                '\\x1b[1;30;42m',\r\n                '\\x1b[1;97;42m'\r\n            ]\r\n        }\r\n    }\r\n};\r\nfunction constructPartsAndArgs(opts) {\r\n    const { direction , type , path , id , input  } = opts;\r\n    const parts = [];\r\n    const args = [];\r\n    if (opts.colorMode === 'ansi') {\r\n        const [lightRegular, darkRegular] = palettes.ansi.regular[type];\r\n        const [lightBold, darkBold] = palettes.ansi.bold[type];\r\n        const reset = '\\x1b[0m';\r\n        parts.push(direction === 'up' ? lightRegular : darkRegular, direction === 'up' ? '>>' : '<<', type, direction === 'up' ? lightBold : darkBold, `#${id}`, path, reset);\r\n        if (direction === 'up') {\r\n            args.push({\r\n                input: opts.input\r\n            });\r\n        } else {\r\n            args.push({\r\n                input: opts.input,\r\n                // strip context from result cause it's too noisy in terminal wihtout collapse mode\r\n                result: 'result' in opts.result ? opts.result.result : opts.result,\r\n                elapsedMs: opts.elapsedMs\r\n            });\r\n        }\r\n        return {\r\n            parts,\r\n            args\r\n        };\r\n    }\r\n    const [light, dark] = palettes.css[type];\r\n    const css = `\r\n    background-color: #${direction === 'up' ? light : dark}; \r\n    color: ${direction === 'up' ? 'black' : 'white'};\r\n    padding: 2px;\r\n  `;\r\n    parts.push('%c', direction === 'up' ? '>>' : '<<', type, `#${id}`, `%c${path}%c`, '%O');\r\n    args.push(css, `${css}; font-weight: bold;`, `${css}; font-weight: normal;`);\r\n    if (direction === 'up') {\r\n        args.push({\r\n            input,\r\n            context: opts.context\r\n        });\r\n    } else {\r\n        args.push({\r\n            input,\r\n            result: opts.result,\r\n            elapsedMs: opts.elapsedMs,\r\n            context: opts.context\r\n        });\r\n    }\r\n    return {\r\n        parts,\r\n        args\r\n    };\r\n}\r\n// maybe this should be moved to it's own package\r\nconst defaultLogger = ({ c =console , colorMode ='css'  })=>(props)=>{\r\n        const rawInput = props.input;\r\n        const input = isFormData(rawInput) ? Object.fromEntries(rawInput) : rawInput;\r\n        const { parts , args  } = constructPartsAndArgs({\r\n            ...props,\r\n            colorMode,\r\n            input\r\n        });\r\n        const fn = props.direction === 'down' && props.result && (props.result instanceof Error || 'error' in props.result.result) ? 'error' : 'log';\r\n        c[fn].apply(null, [\r\n            parts.join(' ')\r\n        ].concat(args));\r\n    };\r\n/**\r\n * @see https://trpc.io/docs/client/links/loggerLink\r\n */ function loggerLink(opts = {}) {\r\n    const { enabled =()=>true  } = opts;\r\n    const colorMode = opts.colorMode ?? (typeof window === 'undefined' ? 'ansi' : 'css');\r\n    const { logger =defaultLogger({\r\n        c: opts.console,\r\n        colorMode\r\n    })  } = opts;\r\n    return ()=>{\r\n        return ({ op , next  })=>{\r\n            return observable((observer)=>{\r\n                // ->\r\n                enabled({\r\n                    ...op,\r\n                    direction: 'up'\r\n                }) && logger({\r\n                    ...op,\r\n                    direction: 'up'\r\n                });\r\n                const requestStartTime = Date.now();\r\n                function logResult(result) {\r\n                    const elapsedMs = Date.now() - requestStartTime;\r\n                    enabled({\r\n                        ...op,\r\n                        direction: 'down',\r\n                        result\r\n                    }) && logger({\r\n                        ...op,\r\n                        direction: 'down',\r\n                        elapsedMs,\r\n                        result\r\n                    });\r\n                }\r\n                return next(op).pipe(tap({\r\n                    next (result) {\r\n                        logResult(result);\r\n                    },\r\n                    error (result) {\r\n                        logResult(result);\r\n                    }\r\n                })).subscribe(observer);\r\n            });\r\n        };\r\n    };\r\n}\r\n\r\nexport { loggerLink };\r\n", "import { observable } from '@trpc/server/observable';\r\nimport { t as transformResult } from '../transformResult-ace864b8.mjs';\r\nimport { T as TRPCClientError } from '../TRPCClientError-38f9a32a.mjs';\r\nimport '@trpc/server/shared';\r\n\r\n/* istanbul ignore next -- @preserve */ const retryDelay = (attemptIndex)=>attemptIndex === 0 ? 0 : Math.min(1000 * 2 ** attemptIndex, 30000);\r\n\r\nfunction createWSClient(opts) {\r\n    const { url , WebSocket: WebSocketImpl = WebSocket , retryDelayMs: retryDelayFn = retryDelay , onOpen , onClose ,  } = opts;\r\n    /* istanbul ignore next -- @preserve */ if (!WebSocketImpl) {\r\n        throw new Error(\"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\");\r\n    }\r\n    /**\r\n   * outgoing messages buffer whilst not open\r\n   */ let outgoing = [];\r\n    const pendingRequests = Object.create(null);\r\n    let connectAttempt = 0;\r\n    let dispatchTimer = null;\r\n    let connectTimer = null;\r\n    let activeConnection = createWS();\r\n    let state = 'connecting';\r\n    /**\r\n   * tries to send the list of messages\r\n   */ function dispatch() {\r\n        if (state !== 'open' || dispatchTimer) {\r\n            return;\r\n        }\r\n        dispatchTimer = setTimeout(()=>{\r\n            dispatchTimer = null;\r\n            if (outgoing.length === 1) {\r\n                // single send\r\n                activeConnection.send(JSON.stringify(outgoing.pop()));\r\n            } else {\r\n                // batch send\r\n                activeConnection.send(JSON.stringify(outgoing));\r\n            }\r\n            // clear\r\n            outgoing = [];\r\n        });\r\n    }\r\n    function tryReconnect() {\r\n        if (connectTimer !== null || state === 'closed') {\r\n            return;\r\n        }\r\n        const timeout = retryDelayFn(connectAttempt++);\r\n        reconnectInMs(timeout);\r\n    }\r\n    function reconnect() {\r\n        state = 'connecting';\r\n        const oldConnection = activeConnection;\r\n        activeConnection = createWS();\r\n        closeIfNoPending(oldConnection);\r\n    }\r\n    function reconnectInMs(ms) {\r\n        if (connectTimer) {\r\n            return;\r\n        }\r\n        state = 'connecting';\r\n        connectTimer = setTimeout(reconnect, ms);\r\n    }\r\n    function closeIfNoPending(conn) {\r\n        // disconnect as soon as there are are no pending result\r\n        const hasPendingRequests = Object.values(pendingRequests).some((p)=>p.ws === conn);\r\n        if (!hasPendingRequests) {\r\n            conn.close();\r\n        }\r\n    }\r\n    function closeActiveSubscriptions() {\r\n        Object.values(pendingRequests).forEach((req)=>{\r\n            if (req.type === 'subscription') {\r\n                req.callbacks.complete();\r\n            }\r\n        });\r\n    }\r\n    function resumeSubscriptionOnReconnect(req) {\r\n        if (outgoing.some((r)=>r.id === req.op.id)) {\r\n            return;\r\n        }\r\n        request(req.op, req.callbacks);\r\n    }\r\n    function createWS() {\r\n        const urlString = typeof url === 'function' ? url() : url;\r\n        const conn = new WebSocketImpl(urlString);\r\n        clearTimeout(connectTimer);\r\n        connectTimer = null;\r\n        conn.addEventListener('open', ()=>{\r\n            /* istanbul ignore next -- @preserve */ if (conn !== activeConnection) {\r\n                return;\r\n            }\r\n            connectAttempt = 0;\r\n            state = 'open';\r\n            onOpen?.();\r\n            dispatch();\r\n        });\r\n        conn.addEventListener('error', ()=>{\r\n            if (conn === activeConnection) {\r\n                tryReconnect();\r\n            }\r\n        });\r\n        const handleIncomingRequest = (req)=>{\r\n            if (req.method === 'reconnect' && conn === activeConnection) {\r\n                if (state === 'open') {\r\n                    onClose?.();\r\n                }\r\n                reconnect();\r\n                // notify subscribers\r\n                for (const pendingReq of Object.values(pendingRequests)){\r\n                    if (pendingReq.type === 'subscription') {\r\n                        resumeSubscriptionOnReconnect(pendingReq);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        const handleIncomingResponse = (data)=>{\r\n            const req = data.id !== null && pendingRequests[data.id];\r\n            if (!req) {\r\n                // do something?\r\n                return;\r\n            }\r\n            req.callbacks.next?.(data);\r\n            if (req.ws !== activeConnection && conn === activeConnection) {\r\n                const oldWs = req.ws;\r\n                // gracefully replace old connection with this\r\n                req.ws = activeConnection;\r\n                closeIfNoPending(oldWs);\r\n            }\r\n            if ('result' in data && data.result.type === 'stopped' && conn === activeConnection) {\r\n                req.callbacks.complete();\r\n            }\r\n        };\r\n        conn.addEventListener('message', ({ data  })=>{\r\n            const msg = JSON.parse(data);\r\n            if ('method' in msg) {\r\n                handleIncomingRequest(msg);\r\n            } else {\r\n                handleIncomingResponse(msg);\r\n            }\r\n            if (conn !== activeConnection || state === 'closed') {\r\n                // when receiving a message, we close old connection that has no pending requests\r\n                closeIfNoPending(conn);\r\n            }\r\n        });\r\n        conn.addEventListener('close', ({ code  })=>{\r\n            if (state === 'open') {\r\n                onClose?.({\r\n                    code\r\n                });\r\n            }\r\n            if (activeConnection === conn) {\r\n                // connection might have been replaced already\r\n                tryReconnect();\r\n            }\r\n            for (const [key, req] of Object.entries(pendingRequests)){\r\n                if (req.ws !== conn) {\r\n                    continue;\r\n                }\r\n                if (state === 'closed') {\r\n                    // If the connection was closed, we just call `complete()` on the request\r\n                    delete pendingRequests[key];\r\n                    req.callbacks.complete?.();\r\n                    continue;\r\n                }\r\n                // The connection was closed either unexpectedly or because of a reconnect\r\n                if (req.type === 'subscription') {\r\n                    // Subscriptions will resume after we've reconnected\r\n                    resumeSubscriptionOnReconnect(req);\r\n                } else {\r\n                    // Queries and mutations will error if interrupted\r\n                    delete pendingRequests[key];\r\n                    req.callbacks.error?.(TRPCClientError.from(new TRPCWebSocketClosedError('WebSocket closed prematurely')));\r\n                }\r\n            }\r\n        });\r\n        return conn;\r\n    }\r\n    function request(op, callbacks) {\r\n        const { type , input , path , id  } = op;\r\n        const envelope = {\r\n            id,\r\n            method: type,\r\n            params: {\r\n                input,\r\n                path\r\n            }\r\n        };\r\n        pendingRequests[id] = {\r\n            ws: activeConnection,\r\n            type,\r\n            callbacks,\r\n            op\r\n        };\r\n        // enqueue message\r\n        outgoing.push(envelope);\r\n        dispatch();\r\n        return ()=>{\r\n            const callbacks = pendingRequests[id]?.callbacks;\r\n            delete pendingRequests[id];\r\n            outgoing = outgoing.filter((msg)=>msg.id !== id);\r\n            callbacks?.complete?.();\r\n            if (activeConnection.readyState === WebSocketImpl.OPEN && op.type === 'subscription') {\r\n                outgoing.push({\r\n                    id,\r\n                    method: 'subscription.stop'\r\n                });\r\n                dispatch();\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        close: ()=>{\r\n            state = 'closed';\r\n            onClose?.();\r\n            closeActiveSubscriptions();\r\n            closeIfNoPending(activeConnection);\r\n            clearTimeout(connectTimer);\r\n            connectTimer = null;\r\n        },\r\n        request,\r\n        getConnection () {\r\n            return activeConnection;\r\n        }\r\n    };\r\n}\r\nclass TRPCWebSocketClosedError extends Error {\r\n    constructor(message){\r\n        super(message);\r\n        this.name = 'TRPCWebSocketClosedError';\r\n        Object.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\r\n    }\r\n}\r\n/**\r\n * @see https://trpc.io/docs/client/links/wsLink\r\n */ function wsLink(opts) {\r\n    return (runtime)=>{\r\n        const { client  } = opts;\r\n        return ({ op  })=>{\r\n            return observable((observer)=>{\r\n                const { type , path , id , context  } = op;\r\n                const input = runtime.transformer.serialize(op.input);\r\n                const unsub = client.request({\r\n                    type,\r\n                    path,\r\n                    input,\r\n                    id,\r\n                    context\r\n                }, {\r\n                    error (err) {\r\n                        observer.error(err);\r\n                        unsub();\r\n                    },\r\n                    complete () {\r\n                        observer.complete();\r\n                    },\r\n                    next (message) {\r\n                        const transformed = transformResult(message, runtime);\r\n                        if (!transformed.ok) {\r\n                            observer.error(TRPCClientError.from(transformed.error));\r\n                            return;\r\n                        }\r\n                        observer.next({\r\n                            result: transformed.result\r\n                        });\r\n                        if (op.type !== 'subscription') {\r\n                            // if it isn't a subscription we don't care about next response\r\n                            unsub();\r\n                            observer.complete();\r\n                        }\r\n                    }\r\n                });\r\n                return ()=>{\r\n                    unsub();\r\n                };\r\n            });\r\n        };\r\n    };\r\n}\r\n\r\nexport { createWSClient, wsLink };\r\n", "import { share, observableToPromise } from '@trpc/server/observable';\r\nimport { c as createChain } from './splitLink-4c75f7be.mjs';\r\nexport { s as splitLink } from './splitLink-4c75f7be.mjs';\r\nimport { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\r\nexport { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\r\nimport { createFlatProxy, createRecursiveProxy } from '@trpc/server/shared';\r\nimport { f as fetchHTTPResponse, g as getUrl, a as getBody$1, h as httpRequest } from './httpUtils-b9d0cb48.mjs';\r\nexport { b as getFetch } from './httpUtils-b9d0cb48.mjs';\r\nimport { c as createHTTPBatchLink } from './httpBatchLink-d0f9eac9.mjs';\r\nexport { h as httpBatchLink } from './httpBatchLink-d0f9eac9.mjs';\r\nimport { httpLinkFactory } from './links/httpLink.mjs';\r\nexport { httpLink, httpLinkFactory } from './links/httpLink.mjs';\r\nexport { loggerLink } from './links/loggerLink.mjs';\r\nexport { createWSClient, wsLink } from './links/wsLink.mjs';\r\nimport './transformResult-ace864b8.mjs';\r\n\r\nclass TRPCUntypedClient {\r\n    $request({ type , input , path , context ={}  }) {\r\n        const chain$ = createChain({\r\n            links: this.links,\r\n            op: {\r\n                id: ++this.requestId,\r\n                type,\r\n                path,\r\n                input,\r\n                context\r\n            }\r\n        });\r\n        return chain$.pipe(share());\r\n    }\r\n    requestAsPromise(opts) {\r\n        const req$ = this.$request(opts);\r\n        const { promise , abort  } = observableToPromise(req$);\r\n        const abortablePromise = new Promise((resolve, reject)=>{\r\n            opts.signal?.addEventListener('abort', abort);\r\n            promise.then((envelope)=>{\r\n                resolve(envelope.result.data);\r\n            }).catch((err)=>{\r\n                reject(TRPCClientError.from(err));\r\n            });\r\n        });\r\n        return abortablePromise;\r\n    }\r\n    query(path, input, opts) {\r\n        return this.requestAsPromise({\r\n            type: 'query',\r\n            path,\r\n            input,\r\n            context: opts?.context,\r\n            signal: opts?.signal\r\n        });\r\n    }\r\n    mutation(path, input, opts) {\r\n        return this.requestAsPromise({\r\n            type: 'mutation',\r\n            path,\r\n            input,\r\n            context: opts?.context,\r\n            signal: opts?.signal\r\n        });\r\n    }\r\n    subscription(path, input, opts) {\r\n        const observable$ = this.$request({\r\n            type: 'subscription',\r\n            path,\r\n            input,\r\n            context: opts?.context\r\n        });\r\n        return observable$.subscribe({\r\n            next (envelope) {\r\n                if (envelope.result.type === 'started') {\r\n                    opts.onStarted?.();\r\n                } else if (envelope.result.type === 'stopped') {\r\n                    opts.onStopped?.();\r\n                } else {\r\n                    opts.onData?.(envelope.result.data);\r\n                }\r\n            },\r\n            error (err) {\r\n                opts.onError?.(err);\r\n            },\r\n            complete () {\r\n                opts.onComplete?.();\r\n            }\r\n        });\r\n    }\r\n    constructor(opts){\r\n        this.requestId = 0;\r\n        const combinedTransformer = (()=>{\r\n            const transformer = opts.transformer;\r\n            if (!transformer) {\r\n                return {\r\n                    input: {\r\n                        serialize: (data)=>data,\r\n                        deserialize: (data)=>data\r\n                    },\r\n                    output: {\r\n                        serialize: (data)=>data,\r\n                        deserialize: (data)=>data\r\n                    }\r\n                };\r\n            }\r\n            if ('input' in transformer) {\r\n                return opts.transformer;\r\n            }\r\n            return {\r\n                input: transformer,\r\n                output: transformer\r\n            };\r\n        })();\r\n        this.runtime = {\r\n            transformer: {\r\n                serialize: (data)=>combinedTransformer.input.serialize(data),\r\n                deserialize: (data)=>combinedTransformer.output.deserialize(data)\r\n            },\r\n            combinedTransformer\r\n        };\r\n        // Initialize the links\r\n        this.links = opts.links.map((link)=>link(this.runtime));\r\n    }\r\n}\r\n\r\nfunction createTRPCUntypedClient(opts) {\r\n    return new TRPCUntypedClient(opts);\r\n}\r\n\r\n/**\r\n * @deprecated use `createTRPCProxyClient` instead\r\n */ function createTRPCClient(opts) {\r\n    const client = new TRPCUntypedClient(opts);\r\n    return client;\r\n}\r\n\r\nconst clientCallTypeMap = {\r\n    query: 'query',\r\n    mutate: 'mutation',\r\n    subscribe: 'subscription'\r\n};\r\n/** @internal */ const clientCallTypeToProcedureType = (clientCallType)=>{\r\n    return clientCallTypeMap[clientCallType];\r\n};\r\n/**\r\n * @deprecated use `createTRPCProxyClient` instead\r\n * @internal\r\n */ function createTRPCClientProxy(client) {\r\n    return createFlatProxy((key)=>{\r\n        if (client.hasOwnProperty(key)) {\r\n            return client[key];\r\n        }\r\n        if (key === '__untypedClient') {\r\n            return client;\r\n        }\r\n        return createRecursiveProxy(({ path , args  })=>{\r\n            const pathCopy = [\r\n                key,\r\n                ...path\r\n            ];\r\n            const procedureType = clientCallTypeToProcedureType(pathCopy.pop());\r\n            const fullPath = pathCopy.join('.');\r\n            return client[procedureType](fullPath, ...args);\r\n        });\r\n    });\r\n}\r\nfunction createTRPCProxyClient(opts) {\r\n    const client = new TRPCUntypedClient(opts);\r\n    const proxy = createTRPCClientProxy(client);\r\n    return proxy;\r\n}\r\n/**\r\n * Get an untyped client from a proxy client\r\n * @internal\r\n */ function getUntypedClient(client) {\r\n    return client.__untypedClient;\r\n}\r\n\r\nfunction getTextDecoder(customTextDecoder) {\r\n    if (customTextDecoder) {\r\n        return customTextDecoder;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n    if (typeof window !== 'undefined' && window.TextDecoder) {\r\n        return new window.TextDecoder();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\r\n    if (typeof globalThis !== 'undefined' && globalThis.TextDecoder) {\r\n        return new globalThis.TextDecoder();\r\n    }\r\n    throw new Error('No TextDecoder implementation found');\r\n}\r\n\r\n// Stream parsing adapted from https://www.loginradius.com/blog/engineering/guest-post/http-streaming-with-nodejs-and-fetch-api/\r\n/**\r\n * @internal\r\n * @description Take a stream of bytes and call `onLine` with\r\n * a JSON object for each line in the stream. Expected stream\r\n * format is:\r\n * ```json\r\n * {\"1\": {...}\r\n * ,\"0\": {...}\r\n * }\r\n * ```\r\n */ async function parseJSONStream(opts) {\r\n    const parse = opts.parse ?? JSON.parse;\r\n    const onLine = (line)=>{\r\n        if (opts.signal?.aborted) return;\r\n        if (!line || line === '}') {\r\n            return;\r\n        }\r\n        /**\r\n     * At this point, `line` can be one of two things:\r\n     * - The first line of the stream `{\"2\":{...}`\r\n     * - A line in the middle of the stream `,\"2\":{...}`\r\n     */ const indexOfColon = line.indexOf(':');\r\n        const indexAsStr = line.substring(2, indexOfColon - 1);\r\n        const text = line.substring(indexOfColon + 1);\r\n        opts.onSingle(Number(indexAsStr), parse(text));\r\n    };\r\n    await readLines(opts.readableStream, onLine, opts.textDecoder);\r\n}\r\n/**\r\n * Handle transforming a stream of bytes into lines of text.\r\n * To avoid using AsyncIterators / AsyncGenerators,\r\n * we use a callback for each line.\r\n *\r\n * @param readableStream can be a NodeJS stream or a WebAPI stream\r\n * @param onLine will be called for every line ('\\n' delimited) in the stream\r\n */ async function readLines(readableStream, onLine, textDecoder) {\r\n    let partOfLine = '';\r\n    const onChunk = (chunk)=>{\r\n        const chunkText = textDecoder.decode(chunk);\r\n        const chunkLines = chunkText.split('\\n');\r\n        if (chunkLines.length === 1) {\r\n            partOfLine += chunkLines[0];\r\n        } else if (chunkLines.length > 1) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\r\n            onLine(partOfLine + chunkLines[0]);\r\n            for(let i = 1; i < chunkLines.length - 1; i++){\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\r\n                onLine(chunkLines[i]);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length doesn't change, so is necessarily > 1\r\n            partOfLine = chunkLines[chunkLines.length - 1];\r\n        }\r\n    };\r\n    // we handle 2 different types of streams, this if where we figure out which one we have\r\n    if ('getReader' in readableStream) {\r\n        await readStandardChunks(readableStream, onChunk);\r\n    } else {\r\n        await readNodeChunks(readableStream, onChunk);\r\n    }\r\n    onLine(partOfLine);\r\n}\r\n/**\r\n * Handle NodeJS stream\r\n */ function readNodeChunks(stream, onChunk) {\r\n    return new Promise((resolve)=>{\r\n        stream.on('data', onChunk);\r\n        stream.on('end', resolve);\r\n    });\r\n}\r\n/**\r\n * Handle WebAPI stream\r\n */ async function readStandardChunks(stream, onChunk) {\r\n    const reader = stream.getReader();\r\n    let readResult = await reader.read();\r\n    while(!readResult.done){\r\n        onChunk(readResult.value);\r\n        readResult = await reader.read();\r\n    }\r\n}\r\nconst streamingJsonHttpRequester = (opts, onSingle)=>{\r\n    const ac = opts.AbortController ? new opts.AbortController() : null;\r\n    const responsePromise = fetchHTTPResponse({\r\n        ...opts,\r\n        contentTypeHeader: 'application/json',\r\n        batchModeHeader: 'stream',\r\n        getUrl,\r\n        getBody: getBody$1\r\n    }, ac);\r\n    const cancel = ()=>ac?.abort();\r\n    const promise = responsePromise.then(async (res)=>{\r\n        if (!res.body) throw new Error('Received response without body');\r\n        const meta = {\r\n            response: res\r\n        };\r\n        return parseJSONStream({\r\n            readableStream: res.body,\r\n            onSingle,\r\n            parse: (string)=>({\r\n                    json: JSON.parse(string),\r\n                    meta\r\n                }),\r\n            signal: ac?.signal,\r\n            textDecoder: opts.textDecoder\r\n        });\r\n    });\r\n    return {\r\n        cancel,\r\n        promise\r\n    };\r\n};\r\n\r\nconst streamRequester = (requesterOpts)=>{\r\n    const textDecoder = getTextDecoder(requesterOpts.opts.textDecoder);\r\n    return (batchOps, unitResolver)=>{\r\n        const path = batchOps.map((op)=>op.path).join(',');\r\n        const inputs = batchOps.map((op)=>op.input);\r\n        const { cancel , promise  } = streamingJsonHttpRequester({\r\n            ...requesterOpts,\r\n            textDecoder,\r\n            path,\r\n            inputs,\r\n            headers () {\r\n                if (!requesterOpts.opts.headers) {\r\n                    return {};\r\n                }\r\n                if (typeof requesterOpts.opts.headers === 'function') {\r\n                    return requesterOpts.opts.headers({\r\n                        opList: batchOps\r\n                    });\r\n                }\r\n                return requesterOpts.opts.headers;\r\n            }\r\n        }, (index, res)=>{\r\n            unitResolver(index, res);\r\n        });\r\n        return {\r\n            /**\r\n       * return an empty array because the batchLoader expects an array of results\r\n       * but we've already called the `unitResolver` for each of them, there's\r\n       * nothing left to do here.\r\n       */ promise: promise.then(()=>[]),\r\n            cancel\r\n        };\r\n    };\r\n};\r\nconst unstable_httpBatchStreamLink = createHTTPBatchLink(streamRequester);\r\n\r\nconst getBody = (opts)=>{\r\n    if (!('input' in opts)) {\r\n        return undefined;\r\n    }\r\n    if (!(opts.input instanceof FormData)) {\r\n        throw new Error('Input is not FormData');\r\n    }\r\n    return opts.input;\r\n};\r\nconst formDataRequester = (opts)=>{\r\n    if (opts.type !== 'mutation') {\r\n        // TODO(?) handle formdata queries\r\n        throw new Error('We only handle mutations with formdata');\r\n    }\r\n    return httpRequest({\r\n        ...opts,\r\n        getUrl () {\r\n            return `${opts.url}/${opts.path}`;\r\n        },\r\n        getBody\r\n    });\r\n};\r\nconst experimental_formDataLink = httpLinkFactory({\r\n    requester: formDataRequester\r\n});\r\n\r\nexport { TRPCUntypedClient, clientCallTypeToProcedureType, createTRPCClient, createTRPCClientProxy, createTRPCProxyClient, createTRPCUntypedClient, experimental_formDataLink, getUntypedClient, unstable_httpBatchStreamLink };\r\n"],
  "mappings": "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",
  "names": ["observable", "TRPC_ERROR_CODES_BY_NUMBER", "isObject", "isObject", "item", "httpBatchLink", "callbacks", "getBody"]
}
